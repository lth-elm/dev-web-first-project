if (!self.define) { const e = e => { e !== 'require' && (e += '.js'); let r = Promise.resolve(); return i[e] || (r = new Promise(async r => { if ('document' in self) { const i = document.createElement('script'); i.src = e, document.head.appendChild(i), i.onload = r } else importScripts(e), r() })), r.then(() => { if (!i[e]) throw new Error(`Module ${e} didnâ€™t register its module`); return i[e] }) }; const r = (r, i) => { Promise.all(r.map(e)).then(e => i(e.length === 1 ? e[0] : e)) }; const i = { require: Promise.resolve(r) }; self.define = (r, s, n) => { i[r] || (i[r] = Promise.resolve().then(() => { const i = {}; const o = { uri: location.origin + r.slice(1) }; return Promise.all(s.map(r => { switch (r) { case 'exports':return i; case 'module':return o; default:return e(r) } })).then(e => { const r = n(...e); return i.default || (i.default = r), i }) })) } }define('./service-worker.js', ['./workbox-a1deba27'], function (e) { 'use strict'; e.setCacheNameDetails({ prefix: 'client' }), self.addEventListener('message', e => { e.data && e.data.type === 'SKIP_WAITING' && self.skipWaiting() }), e.precacheAndRoute([{ url: '/css/app.b416ca79.css', revision: null }, { url: '/img/dowhile.a1e6d7e9.png', revision: null }, { url: '/img/kakashi-avatar.c4016113.jpg', revision: null }, { url: '/img/logo-quickscience-white.aa2b2202.png', revision: null }, { url: '/img/switch.a57b1c15.png', revision: null }, { url: '/index.html', revision: '3e72176bdf701ec1e1210b390fba2236' }, { url: '/js/app.c5c81a55.js', revision: null }, { url: '/js/chunk-vendors.dfe4706d.js', revision: null }, { url: '/manifest.json', revision: '8eff00fb23e5046e8587fb699e79e093' }, { url: '/robots.txt', revision: '735ab4f94fbcd57074377afca324c813' }], {}) })
// # sourceMappingURL=service-worker.js.map
